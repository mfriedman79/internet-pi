---
version: "3.1"

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  front-tier:
  back-tier:
  traefik-proxy:
    external: true

services:
  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=90d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - ping:ping
      - speedtest:speedtest
      - cadvisor:cadvisor
      - nodeexp:nodeexp
      - snmp:snmp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.entrypoints=http"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.local.friedman.network`)"
      - "traefik.http.middlewares.prometheus-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.prometheus.middlewares=prometheus-https-redirect"
      - "traefik.http.routers.prometheus-secure.entrypoints=https"
      - "traefik.http.routers.prometheus-secure.rule=Host(`prometheus.local.friedman.network`)"
      - "traefik.http.routers.prometheus-secure.tls=true"
      - "traefik.http.routers.prometheus-secure.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.docker.network=traefik-proxy"
    networks:
      - back-tier
      - traefik-proxy

  cadvisor:
    #image: zcube/cadvisor:v0.38.8
    image: michbeck100/cadvisor:latest
    privileged: true
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - '/dev/kmsg:/dev/kmsg'
    expose:
      - 8080
    networks:
      - back-tier
    command:
      - '--disable_metrics=hugetlb'

  grafana:
    #image: grafana/grafana:8.0.7
    image: grafana/grafana:latest
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      #- ./grafana/etc:/etc/grafana:ro
    depends_on:
      - prometheus
    ports:
      - 3030:3000
    env_file:
      - ./grafana/config.monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=http"
      - "traefik.http.routers.grafana.rule=Host(`grafana.local.friedman.network`)"
      - "traefik.http.middlewares.grafana-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.grafana.middlewares=grafana-https-redirect"
      - "traefik.http.routers.grafana-secure.entrypoints=https"
      - "traefik.http.routers.grafana-secure.rule=Host(`grafana.local.friedman.network`)"
      - "traefik.http.routers.grafana-secure.tls=true"
      - "traefik.http.routers.grafana-secure.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=traefik-proxy"
    networks:
      - back-tier
      - traefik-proxy

  ping:
    tty: true
    stdin_open: true
    expose:
      - 9115
    ports:
      - 9115:9115
    image: prom/blackbox-exporter
    restart: always
    volumes:
      - ./blackbox/config:/config
    command:
      - '--config.file=/config/blackbox.yml'
    networks:
      - back-tier

  speedtest:
    expose:
      - 9798
    ports:
      - 9798:9798
    image: miguelndecarvalho/speedtest-exporter
    restart: always
    networks:
      - back-tier

  nodeexp:
    privileged: true
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - 9100:9100
    restart: always
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
#     - --collector.sysfs /host/sys
#     - --collector.procfs /host/proc
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - back-tier

  snmp:
    image: prom/snmp-exporter:latest
    volumes:
      - ./snmp/:/etc/snmp_exporter
    ports:
      - 9116:9116
    restart: always
    command: 
      - '--config.file=/etc/snmp_exporter/snmp.yml'
    networks:
      - back-tier

  apcupsd-exporter:
    image: sfudeus/apcupsd_exporter:master_1.17.3
    ports:
      - 9162:9162/tcp
    command: '-apcupsd.addr 192.168.22.54:3551'
    networks:
      - back-tier
    restart: always

  smartthings-metrics:
    ports:
      - '9153:9153'
    environment:
      - 'true'
    image: moikot/smartthings-metrics
    command: '-token c7150787-385a-41b3-917b-3b5ff0f3349d'
    networks:
      - back-tier          
    restart: always
